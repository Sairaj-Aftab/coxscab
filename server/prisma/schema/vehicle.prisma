model VehicleType {
  id                          String   @id @default(auto()) @map("_id") @db.ObjectId
  name String
  slug String
  vehicles                     Vehicle[]
  driver                       Driver[]
  package                      Package[]
  status      Boolean          @default(true)
  trash       Boolean          @default(false)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}
model VehicleCondition {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name String
  slug String
  vehicles Vehicle[]
  status      Boolean          @default(true)
  trash       Boolean          @default(false)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

enum VehicleStatus {
  ACTIVE
  MAINTENANCE
  INACTIVE
}

model Vehicle {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  vehicleType         VehicleType @relation(fields: [vehicleTypeId], references: [id], onDelete: Cascade)
  vehicleTypeId       String @db.ObjectId
  vehicleCondition    VehicleCondition? @relation(fields: [vehicleConditionId], references: [id], onDelete: Cascade)
  vehicleConditionId  String? @db.ObjectId
  registrationNo      String
  fcExpire            DateTime?
  engineChassisNo     String?
  qrCode              String?
  ownerName           String?
  ownerMobileNo       String?
  ownerNidNo          String?
  ownerNidDob         String?
  fatherName          String?
  ownerAddress        Json?
  vehicleImage        String[]
  followUpByAuthority String?
  garage              Garage? @relation("GarageVehicles", fields: [garageId], references: [id], onDelete: Cascade)
  garageId            String? @db.ObjectId
  drivers             Driver[]
  status              Boolean   @default(true)
  trash               Boolean   @default(false)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  
}