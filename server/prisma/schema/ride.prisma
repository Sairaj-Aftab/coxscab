model Ride {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  driverId       String     @db.ObjectId
  driver         Driver       @relation("DriverRides", fields: [driverId], references: [id])
  passengerId    String     @db.ObjectId
  passenger      User       @relation("PassengerRides", fields: [passengerId], references: [id])
  startLocation  String
  endLocation    String
  startTime      DateTime
  endTime        DateTime?
  fare           Float
  status         String     @default("pending") // e.g., "pending", "ongoing", "completed", "cancelled"
  package        Package? @relation(fields: [packageId], references: [id], onDelete: Cascade)
  packageId      String? @db.ObjectId
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  reviews        Review[]   // Associated reviews
  payment        Payment?
}