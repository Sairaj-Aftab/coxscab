model Package {
    id             String     @id @default(auto()) @map("_id") @db.ObjectId
    packageName    String?
    price          Float
    description    String?
    seat           Int?
    startPoint     Place[] @relation( "startPoint", fields: [startPointId], references: [id])
    startPointId   String[] @db.ObjectId
    endPoint       Place[] @relation("endPoint", fields: [endPointId], references: [id])
    endPointId     String[] @db.ObjectId
    vehicleType    VehicleType @relation(fields: [vehicleTypeId], references: [id], onDelete: Cascade)
    vehicleTypeId  String @db.ObjectId
    rides          Ride[]
    status          Boolean    @default(true)
    trash           Boolean    @default(false)
    createdAt      DateTime   @default(now())
    updatedAt      DateTime   @updatedAt
}

model Place {
    id             String     @id @default(auto()) @map("_id") @db.ObjectId
    mapId          Int?
    address        String
    address_bn     String?
    city           String?
    city_bn        String?
    area           String?
    area_bn        String?
    district       String?
    postcode       String?
    location       Json
    startFor       Package[] @relation("startPoint", fields: [startForId], references: [id])
    startForId     String[] @db.ObjectId
    endFor         Package[] @relation( "endPoint", fields: [endForId], references: [id])
    endForId       String[] @db.ObjectId
    status         Boolean    @default(true)
    trash          Boolean    @default(false)
    createdAt      DateTime   @default(now())
    updatedAt      DateTime   @updatedAt
    
}